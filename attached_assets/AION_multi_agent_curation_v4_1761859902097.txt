O que vem no pacote (mapa)
Server

server/curation/store.ts — store de curadoria (placeholder): troque por seu DB real.

server/routes/curation.ts — rotas REST:

GET /api/curation/pending → listar fila.

PATCH /api/curation/edit → editar rascunho (título/tags/namespaces).

POST /api/curation/approve → aprovar e publicar (emite DOC_UPDATED + AGENT_NAMESPACES_CHANGED).

POST /api/curation/reject → rejeitar (emite DOC_DELETED).

POST /api/curation/add → utilitário p/ empilhar pendência (usado por “Promover resposta”/Curador).

server/agent/curator_executive.ts — Curador Executivo (humano+IA): nunca publica direto; sempre manda para fila.

server/seeds/curators.seed.json — inclui Curador e Curador Executivo prontos.

Observação: todos os endpoints esperam o header x-tenant-id.

Client (Admin)

client/src/pages/admin/CurationQueuePage.tsx — Fila de Curadoria (linke para /admin/curation no seu sidebar).

client/src/components/curation/CurationItemEditor.tsx — editor modal com Aprovar & Publicar / Rejeitar.

Docs

README_CURATION_v4.md — instruções detalhadas (integração rápida abaixo).

OPERATIONS_CURATION_v4.md — guia de operação (passo a passo).

docs/governanca_hitl.tex — LaTeX com a matemática/regras de governança HITL.

Como integrar (resumo prático)

Rotas
No seu server/routes.ts, registre:

import { registerCurationRoutes } from "./routes/curation";
// (se estiver usando o "Promover resposta"): import { registerKbPromoteRoutes } from "./routes/kb_promote";

export function registerRoutes(app) {
  // ...rotas já existentes
  registerCurationRoutes(app);
  // registerKbPromoteRoutes(app); // opcional, se usa o botão de promover
}


Sidebar
Adicione no Admin:

<li><Link href="/admin/curation">Curadoria</Link></li>


Seeds
Mescle server/seeds/curators.seed.json ao seu seeder de agentes e execute.

Store real
Substitua as funções em server/curation/store.ts pelo seu persistence layer (Postgres/pgvector, Firestore etc.).
Implemente publishToKB(...) criando doc versionado e retornando { publishedId }.

Indexer
Seu indexador deve expor rebuildNamespaceIndex(tenantId, namespace) (já previsto), reagindo a AGENT_NAMESPACES_CHANGED.

ACL e Auditoria
Restrinja acesso às rotas de curadoria a admins/curadores.
Registre logs (quem aprovou/rejeitou, hora, docId, namespaces, nota).

Documentação do ZIP 
README_CURATION_v4.md
# AION — Módulo de Curadoria com Aprovação Humana (v4)

Este pacote adiciona:
- Curadoria human-in-the-loop (HITL) obrigatória antes da publicação.
- Agentes: Curador e Curador Executivo (IA+humano).
- Rotas para listar pendências, aprovar/publicar, rejeitar e editar.
- UI Admin: Fila de Curadoria + Editor/Ações.

## Instalação Rápida
1. Copie as pastas `server/` e `client/` deste pacote para o seu monorepo.
2. Registre rotas no `server/routes.ts`:
   import { registerCurationRoutes } from "./routes/curation";
   export function registerRoutes(app) {
     registerCurationRoutes(app);
   }
3. Adicione a página no sidebar (link para /admin/curation).
4. Seeds: mescle `server/seeds/curators.seed.json` ao seu seed de agentes.

## Fluxo Operacional
- Entrada: agentes/usuários enviam conteúdo (upload ou "Promover resposta") → vai para `curation/pending`.
- Curadoria: revisores humanos abrem Admin → Curadoria e editam título/tags/namespaces.
- Publicação: ao aprovar, o backend persiste no KB real e emite:
  - DOC_UPDATED (ou DOC_INGESTED na primeira publicação)
  - AGENT_NAMESPACES_CHANGED → indexador reconstrói os namespaces.
- Rejeição: remove da fila, emite DOC_DELETED.

## Integração KB real
- Substitua `server/curation/store.ts` para usar seu DB real.
- Implemente `publishToKB(...)`.
- Indexador: `rebuildNamespaceIndex(tenantId, namespace)`.

## Segurança e ACL
- Restrinja rotas a perfis Admin/Curador.
- Curador tem leitura global e escrita `curation/*`; publicação é feita pelo backend sob aprovação humana.

## Auditoria
- Logue quem aprovou/rejeitou (timestamp, docId, namespaces, note).

## UI
- `/admin/curation` → lista pendências
- `CurationItemEditor` → editor+ações

OPERATIONS_CURATION_v4.md
# Operação — Curadoria HITL

1) Adicionar conteúdo: upload/Promover → /api/curation/add (ou /api/kb/promote).
2) Revisar: UI → Curadoria → editar título/tags/namespaces.
3) Aprovar e publicar: /api/curation/approve → persiste no KB → DOC_UPDATED + AGENT_NAMESPACES_CHANGED → reindex.
4) Rejeitar: /api/curation/reject → remove da fila.
5) Auditoria: registrar quem/quando/o quê.

Todos os endpoints exigem x-tenant-id e auth/ACL de administrador.

docs/governanca_hitl.tex (trecho)
\section{HITL Obrigatório}
Todo novo conteúdo ingressa em curation/pending. A publicação requer aprovação humana.
Eventos: DOC_INGESTED → DOC_UPDATED + AGENT_NAMESPACES_CHANGED.